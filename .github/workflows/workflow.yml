on: [push, pull_request]

name: CI

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.56.0
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: 1.56.0
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            toolchain: 1.56.0
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            toolchain: nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo install diesel_cli --no-default-features --features postgres
      - run: diesel database reset
        working-directory: ./bk
      - uses: nanasess/setup-chromedriver@v1.0.5
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p bk
  test-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: 1.56.0
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: |
          /usr/local/opt/postgres/bin/pg_ctl -D /usr/local/var/postgres start
          sleep 3
          /usr/local/opt/postgres/bin/createuser -s postgres
          echo "DATABASE_URL=postgres://postgres:root@localhost/bk_development" >> $GITHUB_ENV
      - run: cargo install diesel_cli --no-default-features --features postgres
      - run: diesel database reset
        working-directory: ./bk
      - uses: nanasess/setup-chromedriver@v1.0.5
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p bk
  test-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: 1.56.0
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: |
          choco install postgresql13 --force --params '/Password:root'
          echo "C:\Program Files\PostgreSQL\13\bin" >> $GITHUB_PATH
          echo "C:\Program Files\PostgreSQL\13\lib" >> $GITHUB_PATH
          echo "PQ_LIB_DIR=C:\Program Files\PostgreSQL\13\lib" >> $GITHUB_ENV
          echo "DATABASE_URL=postgres://postgres:root@localhost/bk_development" >> $GITHUB_ENV
        shell: bash
      - run: cargo install diesel_cli --no-default-features --features postgres
      - run: diesel database reset
        working-directory: ./bk
      - uses: nanasess/setup-chromedriver@v1.0.5
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p bk
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.56.0
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
