on: [push, pull_request]

name: CI

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.56.1
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: 1.56.1
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            toolchain: 1.56.1
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            toolchain: nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo install diesel_cli --no-default-features --features sqlite
      - run: echo "DATABASE_URL=test.sqlite3" >> $GITHUB_ENV
      - run: diesel database reset
        working-directory: ./bk
      - uses: nanasess/setup-chromedriver@v1.0.5
      - uses: actions-rs/cargo@v1
        with:
          command: test
  test-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: 1.56.1
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo install diesel_cli --no-default-features --features sqlite
      - run: echo "DATABASE_URL=test.sqlite3" >> $GITHUB_ENV
      - run: diesel database reset
        working-directory: ./bk
      - uses: nanasess/setup-chromedriver@v1.0.5
      - uses: actions-rs/cargo@v1
        with:
          command: test
  test-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: 1.56.1
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: |
          choco install sqlite
          cd /D C:\ProgramData\chocolatey\lib\SQLite\tools
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
        shell: cmd
      - run: |
          echo "C:\ProgramData\chocolatey\lib\SQLite\tools" >> $GITHUB_PATH
          echo "SQLITE3_LIB_DIR=C:\ProgramData\chocolatey\lib\SQLite\tools" >> $GITHUB_ENV
          echo "DATABASE_URL=test.sqlite3" >> $GITHUB_ENV
        shell: bash
      - run: cargo install diesel_cli --no-default-features --features sqlite
      - run: diesel database reset
        working-directory: ./bk
      - uses: nanasess/setup-chromedriver@v1.0.5
      - uses: actions-rs/cargo@v1
        with:
          command: test
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.56.1
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
